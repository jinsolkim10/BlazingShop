@page "/cart"
@inject ICartService CartService
@inject NavigationManager Nav

@if (!orderPlaced)
{
    <h3>장바구니</h3>
    @if (cartItems == null || cartItems.Count <= 0)
    {
        <span>현재 장바구니에 담긴 물건이 없습니다.</span>
    }
    else
    {
        <div>
            @foreach (var item in cartItems)
            {
                <div class="item-container">
                    <div class="item-image-wrapper"><img src="@item.Image" class="item-image" /></div>
                    <div class="item-name">
                        <h5><a href="/product/@item.ProductId">@item.ProductTitle</a></h5>
                        <span>@item.EditionName</span><br />
                        <button class="btn-delete" onclick="@(()=>DeleteItem(item))">삭제</button>
                        <EditForm Model="item">
                            <InputNumber id="quantity" @bind-Value="item.Quantity"
                             class="form-control" style="width:70px"></InputNumber>
                        </EditForm>
                    </div>
                    <div class="item-price">$@(item.Price * item.Quantity)</div>
                </div>
            }
            <div class="item-price">
                품목 수: (@cartItems.Count)
                총액: @cartItems.Sum(item =>item.Price * item.Quantity)
            </div>
            <div style="text-align:center; margin-top:10px;">
                <button class="btn btn-primary btn-lg" @onclick="PlaceOrder">주문하기</button>
            </div>

        </div>
    }

}
else
{
    <h3>주문해주셔서 감사합니다!</h3>
    <h4>주문하신 내역입니다.</h4>
    <div>
        @foreach (var item in cartItems)
        {
            <div class="item-container">
                <div class="item-image-wrapper"><img src="@item.Image" class="item-image" /></div>
                <div class="item-name">
                    <h5><a href="/product/@item.ProductId">@item.ProductTitle</a></h5>
                    <span>@item.EditionName</span><br />
                </div>
                <div class="item-price">$@(item.Price * item.Quantity)</div>
            </div>
        }
        <div class="item-price">
            품목 수: (@cartItems.Count)
            총액: $@cartItems.Sum(item =>item.Price * item.Quantity)
        </div>
    </div>
}





@code {
    List<CartItem> cartItems = new List<CartItem>();
    bool orderPlaced = false;

    protected override async Task OnInitializedAsync()
    {
        cartItems = await CartService.GetCartItems();
    }

    private async Task DeleteItem(CartItem item)
    {
        await CartService.DeleteItem(item);
        cartItems = await CartService.GetCartItems();
    }
    private async Task PlaceOrder()
    {
        string checkoutUrl = await CartService.CheckOut();
        Nav.NavigateTo(checkoutUrl);
        //orderPlaced = true;
        await CartService.EmptyCart();
    }
}
